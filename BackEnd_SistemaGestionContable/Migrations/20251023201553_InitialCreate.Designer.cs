// <auto-generated />
using System;
using BackEnd_SistemaGestionContable.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackEnd_SistemaGestionContable.Migrations
{
    [DbContext(typeof(SistemaGestionContableDBContext))]
    [Migration("20251023201553_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BackEnd_SistemaGestionContable.Model.Ciudad", b =>
                {
                    b.Property<int>("CiudadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CiudadId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ciudad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CiudadId");

                    b.ToTable("ciudad");
                });

            modelBuilder.Entity("BackEnd_SistemaGestionContable.Model.Clientes", b =>
                {
                    b.Property<int>("ClientesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientesId"));

                    b.Property<int>("Ciudad_Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientesId");

                    b.HasIndex("Ciudad_Id");

                    b.ToTable("clientes");
                });

            modelBuilder.Entity("BackEnd_SistemaGestionContable.Model.DetalleVenta", b =>
                {
                    b.Property<int>("DetalleVentaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetalleVentaId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Producto_Id")
                        .HasColumnType("int");

                    b.Property<int>("Ventas_Id")
                        .HasColumnType("int");

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<float>("precio_unitario")
                        .HasColumnType("real");

                    b.Property<float>("subtotal")
                        .HasColumnType("real");

                    b.HasKey("DetalleVentaId");

                    b.HasIndex("Producto_Id");

                    b.HasIndex("Ventas_Id");

                    b.ToTable("detalleVenta");
                });

            modelBuilder.Entity("BackEnd_SistemaGestionContable.Model.EntradasInventario", b =>
                {
                    b.Property<int>("EntradasInventarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntradasInventarioId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Productos_Id")
                        .HasColumnType("int");

                    b.Property<int>("Proveedores_Id")
                        .HasColumnType("int");

                    b.Property<int>("Usuarios_Id")
                        .HasColumnType("int");

                    b.Property<float>("cantidad")
                        .HasColumnType("real");

                    b.Property<DateTime>("fecha_entrada")
                        .HasColumnType("datetime2");

                    b.Property<string>("motivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("precio_unitario")
                        .HasColumnType("real");

                    b.Property<string>("referencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntradasInventarioId");

                    b.HasIndex("Productos_Id");

                    b.HasIndex("Proveedores_Id");

                    b.HasIndex("Usuarios_Id");

                    b.ToTable("entradasInventario");
                });

            modelBuilder.Entity("BackEnd_SistemaGestionContable.Model.Genero", b =>
                {
                    b.Property<int>("GeneroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GeneroId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("genero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GeneroId");

                    b.ToTable("genero");
                });

            modelBuilder.Entity("BackEnd_SistemaGestionContable.Model.Mesas", b =>
                {
                    b.Property<int>("MesasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MesasId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("capacidad")
                        .HasColumnType("int");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<int>("numero_mesa")
                        .HasColumnType("int");

                    b.HasKey("MesasId");

                    b.ToTable("mesas");
                });

            modelBuilder.Entity("BackEnd_SistemaGestionContable.Model.MovimientosFinancieros", b =>
                {
                    b.Property<int>("MovimientosFinancierosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovimientosFinancierosId"));

                    b.Property<int>("EntradasInventario_Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Proveedores_Id")
                        .HasColumnType("int");

                    b.Property<int>("Usuarios_Id")
                        .HasColumnType("int");

                    b.Property<int>("Ventas_Id")
                        .HasColumnType("int");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_movimiento")
                        .HasColumnType("datetime2");

                    b.Property<float>("monto")
                        .HasColumnType("real");

                    b.Property<string>("referencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipo_movimiento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MovimientosFinancierosId");

                    b.HasIndex("EntradasInventario_Id");

                    b.HasIndex("Proveedores_Id");

                    b.HasIndex("Usuarios_Id");

                    b.HasIndex("Ventas_Id");

                    b.ToTable("movimientosFinancieros");
                });

            modelBuilder.Entity("BackEnd_SistemaGestionContable.Model.Permisos", b =>
                {
                    b.Property<int>("PermisosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PermisosId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("permisos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PermisosId");

                    b.ToTable("permisos");
                });

            modelBuilder.Entity("BackEnd_SistemaGestionContable.Model.PermisosXTipoUsuario", b =>
                {
                    b.Property<int>("PermisosXTipoUsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PermisosXTipoUsuarioId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("permisos_Id")
                        .HasColumnType("int");

                    b.Property<int>("tipoUsuario_Id")
                        .HasColumnType("int");

                    b.HasKey("PermisosXTipoUsuarioId");

                    b.HasIndex("permisos_Id");

                    b.HasIndex("tipoUsuario_Id");

                    b.ToTable("permisosXTipoUsuario");
                });

            modelBuilder.Entity("BackEnd_SistemaGestionContable.Model.PlanificacionCompras", b =>
                {
                    b.Property<int>("PlanificacionComprasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlanificacionComprasId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Productos_Id")
                        .HasColumnType("int");

                    b.Property<int>("Usuarios_Id")
                        .HasColumnType("int");

                    b.Property<float>("cantidad")
                        .HasColumnType("real");

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_planificada")
                        .HasColumnType("datetime2");

                    b.Property<string>("observaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PlanificacionComprasId");

                    b.HasIndex("Productos_Id");

                    b.HasIndex("Usuarios_Id");

                    b.ToTable("planificacionCompras");
                });

            modelBuilder.Entity("BackEnd_SistemaGestionContable.Model.Productos", b =>
                {
                    b.Property<int>("ProductosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductosId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Proveedores_Id")
                        .HasColumnType("int");

                    b.Property<string>("categoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<string>("imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("stock_actual")
                        .HasColumnType("real");

                    b.Property<float>("stock_compra")
                        .HasColumnType("real");

                    b.Property<float>("stock_minimo")
                        .HasColumnType("real");

                    b.Property<float>("stock_venta")
                        .HasColumnType("real");

                    b.Property<string>("unidad_medida")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductosId");

                    b.HasIndex("Proveedores_Id");

                    b.ToTable("productos");
                });

            modelBuilder.Entity("BackEnd_SistemaGestionContable.Model.Proveedores", b =>
                {
                    b.Property<int>("ProveedoresId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProveedoresId"));

                    b.Property<int>("Ciudad_Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<string>("contacto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProveedoresId");

                    b.HasIndex("Ciudad_Id");

                    b.ToTable("proveedores");
                });

            modelBuilder.Entity("BackEnd_SistemaGestionContable.Model.ReporteGeneral", b =>
                {
                    b.Property<int>("ReporteGeneralId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReporteGeneralId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Usuarios_Id")
                        .HasColumnType("int");

                    b.Property<string>("archivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_generacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("tipo_reporte")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReporteGeneralId");

                    b.HasIndex("Usuarios_Id");

                    b.ToTable("reporteGeneral");
                });

            modelBuilder.Entity("BackEnd_SistemaGestionContable.Model.SalidasInventario", b =>
                {
                    b.Property<int>("SalidasInventarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalidasInventarioId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Productos_Id")
                        .HasColumnType("int");

                    b.Property<int>("Usuarios_Id")
                        .HasColumnType("int");

                    b.Property<float>("cantidad")
                        .HasColumnType("real");

                    b.Property<DateTime>("fecha_salida")
                        .HasColumnType("datetime2");

                    b.Property<string>("motivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SalidasInventarioId");

                    b.HasIndex("Productos_Id");

                    b.HasIndex("Usuarios_Id");

                    b.ToTable("salidasInventario");
                });

            modelBuilder.Entity("BackEnd_SistemaGestionContable.Model.TipoIdentificacion", b =>
                {
                    b.Property<int>("TipoIdentificacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoIdentificacionId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("tipo_Identificacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoIdentificacionId");

                    b.ToTable("tipoIdentificacion");
                });

            modelBuilder.Entity("BackEnd_SistemaGestionContable.Model.TiposUsuario", b =>
                {
                    b.Property<int>("tiposUsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("tiposUsuarioId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("tiposUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("tiposUsuarioId");

                    b.ToTable("tiposUsuario");
                });

            modelBuilder.Entity("BackEnd_SistemaGestionContable.Model.Usuarios", b =>
                {
                    b.Property<int>("UsuariosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuariosId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<string>("apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ciudad_Id")
                        .HasColumnType("int");

                    b.Property<string>("contrasena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("genero_Id")
                        .HasColumnType("int");

                    b.Property<string>("nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numeroIdentificacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tipoIdentificacion_Id")
                        .HasColumnType("int");

                    b.Property<int>("tipo_Usuario_Id")
                        .HasColumnType("int");

                    b.HasKey("UsuariosId");

                    b.HasIndex("ciudad_Id");

                    b.HasIndex("genero_Id");

                    b.HasIndex("tipoIdentificacion_Id");

                    b.HasIndex("tipo_Usuario_Id");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("BackEnd_SistemaGestionContable.Model.Ventas", b =>
                {
                    b.Property<int>("VentasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VentasId"));

                    b.Property<int>("Clientes_Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Mesas_Id")
                        .HasColumnType("int");

                    b.Property<int>("Usuarios_Id")
                        .HasColumnType("int");

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_venta")
                        .HasColumnType("datetime2");

                    b.Property<string>("metodo_pago")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("total")
                        .HasColumnType("real");

                    b.HasKey("VentasId");

                    b.HasIndex("Clientes_Id");

                    b.HasIndex("Mesas_Id");

                    b.HasIndex("Usuarios_Id");

                    b.ToTable("ventas");
                });

            modelBuilder.Entity("BackEnd_SistemaGestionContable.Model.Clientes", b =>
                {
                    b.HasOne("BackEnd_SistemaGestionContable.Model.Ciudad", "ciudad")
                        .WithMany("clientes")
                        .HasForeignKey("Ciudad_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ciudad");
                });

            modelBuilder.Entity("BackEnd_SistemaGestionContable.Model.DetalleVenta", b =>
                {
                    b.HasOne("BackEnd_SistemaGestionContable.Model.Productos", "productos")
                        .WithMany("detalleVenta")
                        .HasForeignKey("Producto_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackEnd_SistemaGestionContable.Model.Ventas", "ventas")
                        .WithMany("detalleVenta")
                        .HasForeignKey("Ventas_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("productos");

                    b.Navigation("ventas");
                });

            modelBuilder.Entity("BackEnd_SistemaGestionContable.Model.EntradasInventario", b =>
                {
                    b.HasOne("BackEnd_SistemaGestionContable.Model.Productos", "productos")
                        .WithMany("entradasInventario")
                        .HasForeignKey("Productos_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackEnd_SistemaGestionContable.Model.Proveedores", "proveedores")
                        .WithMany("entradasInventario")
                        .HasForeignKey("Proveedores_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackEnd_SistemaGestionContable.Model.Usuarios", "usuarios")
                        .WithMany("entradasInventario")
                        .HasForeignKey("Usuarios_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("productos");

                    b.Navigation("proveedores");

                    b.Navigation("usuarios");
                });

            modelBuilder.Entity("BackEnd_SistemaGestionContable.Model.MovimientosFinancieros", b =>
                {
                    b.HasOne("BackEnd_SistemaGestionContable.Model.EntradasInventario", "entradasInventario")
                        .WithMany("movimientosFinancieros")
                        .HasForeignKey("EntradasInventario_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackEnd_SistemaGestionContable.Model.Proveedores", "proveedores")
                        .WithMany("movimientosFinancieros")
                        .HasForeignKey("Proveedores_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackEnd_SistemaGestionContable.Model.Usuarios", "usuarios")
                        .WithMany("movimientosFinancieros")
                        .HasForeignKey("Usuarios_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackEnd_SistemaGestionContable.Model.Ventas", "ventas")
                        .WithMany("movimientosFinancieros")
                        .HasForeignKey("Ventas_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("entradasInventario");

                    b.Navigation("proveedores");

                    b.Navigation("usuarios");

                    b.Navigation("ventas");
                });

            modelBuilder.Entity("BackEnd_SistemaGestionContable.Model.PermisosXTipoUsuario", b =>
                {
                    b.HasOne("BackEnd_SistemaGestionContable.Model.Permisos", "permisos")
                        .WithMany("permisosXTipoUsuario")
                        .HasForeignKey("permisos_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackEnd_SistemaGestionContable.Model.TiposUsuario", "tiposUsuario")
                        .WithMany("permisoXTipoUsuario")
                        .HasForeignKey("tipoUsuario_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("permisos");

                    b.Navigation("tiposUsuario");
                });

            modelBuilder.Entity("BackEnd_SistemaGestionContable.Model.PlanificacionCompras", b =>
                {
                    b.HasOne("BackEnd_SistemaGestionContable.Model.Productos", "productos")
                        .WithMany("planificacionCompras")
                        .HasForeignKey("Productos_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackEnd_SistemaGestionContable.Model.Usuarios", "usuarios")
                        .WithMany("planificacionCompras")
                        .HasForeignKey("Usuarios_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("productos");

                    b.Navigation("usuarios");
                });

            modelBuilder.Entity("BackEnd_SistemaGestionContable.Model.Productos", b =>
                {
                    b.HasOne("BackEnd_SistemaGestionContable.Model.Proveedores", "proveedores")
                        .WithMany("productos")
                        .HasForeignKey("Proveedores_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("proveedores");
                });

            modelBuilder.Entity("BackEnd_SistemaGestionContable.Model.Proveedores", b =>
                {
                    b.HasOne("BackEnd_SistemaGestionContable.Model.Ciudad", "ciudad")
                        .WithMany("proveedores")
                        .HasForeignKey("Ciudad_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ciudad");
                });

            modelBuilder.Entity("BackEnd_SistemaGestionContable.Model.ReporteGeneral", b =>
                {
                    b.HasOne("BackEnd_SistemaGestionContable.Model.Usuarios", "usuarios")
                        .WithMany("reporteGeneral")
                        .HasForeignKey("Usuarios_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("usuarios");
                });

            modelBuilder.Entity("BackEnd_SistemaGestionContable.Model.SalidasInventario", b =>
                {
                    b.HasOne("BackEnd_SistemaGestionContable.Model.Productos", "productos")
                        .WithMany("salidasInventario")
                        .HasForeignKey("Productos_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackEnd_SistemaGestionContable.Model.Usuarios", "usuarios")
                        .WithMany("salidasInventario")
                        .HasForeignKey("Usuarios_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("productos");

                    b.Navigation("usuarios");
                });

            modelBuilder.Entity("BackEnd_SistemaGestionContable.Model.Usuarios", b =>
                {
                    b.HasOne("BackEnd_SistemaGestionContable.Model.Ciudad", "ciudad")
                        .WithMany("usuarios")
                        .HasForeignKey("ciudad_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackEnd_SistemaGestionContable.Model.Genero", "genero")
                        .WithMany("usuarios")
                        .HasForeignKey("genero_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackEnd_SistemaGestionContable.Model.TipoIdentificacion", "tipoIdentificacion")
                        .WithMany("usuarios")
                        .HasForeignKey("tipoIdentificacion_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackEnd_SistemaGestionContable.Model.TiposUsuario", "tipos_Usuario")
                        .WithMany("usuarios")
                        .HasForeignKey("tipo_Usuario_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ciudad");

                    b.Navigation("genero");

                    b.Navigation("tipoIdentificacion");

                    b.Navigation("tipos_Usuario");
                });

            modelBuilder.Entity("BackEnd_SistemaGestionContable.Model.Ventas", b =>
                {
                    b.HasOne("BackEnd_SistemaGestionContable.Model.Clientes", "clientes")
                        .WithMany("ventas")
                        .HasForeignKey("Clientes_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackEnd_SistemaGestionContable.Model.Mesas", "mesas")
                        .WithMany("ventas")
                        .HasForeignKey("Mesas_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackEnd_SistemaGestionContable.Model.Usuarios", "usuarios")
                        .WithMany("ventas")
                        .HasForeignKey("Usuarios_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("clientes");

                    b.Navigation("mesas");

                    b.Navigation("usuarios");
                });

            modelBuilder.Entity("BackEnd_SistemaGestionContable.Model.Ciudad", b =>
                {
                    b.Navigation("clientes");

                    b.Navigation("proveedores");

                    b.Navigation("usuarios");
                });

            modelBuilder.Entity("BackEnd_SistemaGestionContable.Model.Clientes", b =>
                {
                    b.Navigation("ventas");
                });

            modelBuilder.Entity("BackEnd_SistemaGestionContable.Model.EntradasInventario", b =>
                {
                    b.Navigation("movimientosFinancieros");
                });

            modelBuilder.Entity("BackEnd_SistemaGestionContable.Model.Genero", b =>
                {
                    b.Navigation("usuarios");
                });

            modelBuilder.Entity("BackEnd_SistemaGestionContable.Model.Mesas", b =>
                {
                    b.Navigation("ventas");
                });

            modelBuilder.Entity("BackEnd_SistemaGestionContable.Model.Permisos", b =>
                {
                    b.Navigation("permisosXTipoUsuario");
                });

            modelBuilder.Entity("BackEnd_SistemaGestionContable.Model.Productos", b =>
                {
                    b.Navigation("detalleVenta");

                    b.Navigation("entradasInventario");

                    b.Navigation("planificacionCompras");

                    b.Navigation("salidasInventario");
                });

            modelBuilder.Entity("BackEnd_SistemaGestionContable.Model.Proveedores", b =>
                {
                    b.Navigation("entradasInventario");

                    b.Navigation("movimientosFinancieros");

                    b.Navigation("productos");
                });

            modelBuilder.Entity("BackEnd_SistemaGestionContable.Model.TipoIdentificacion", b =>
                {
                    b.Navigation("usuarios");
                });

            modelBuilder.Entity("BackEnd_SistemaGestionContable.Model.TiposUsuario", b =>
                {
                    b.Navigation("permisoXTipoUsuario");

                    b.Navigation("usuarios");
                });

            modelBuilder.Entity("BackEnd_SistemaGestionContable.Model.Usuarios", b =>
                {
                    b.Navigation("entradasInventario");

                    b.Navigation("movimientosFinancieros");

                    b.Navigation("planificacionCompras");

                    b.Navigation("reporteGeneral");

                    b.Navigation("salidasInventario");

                    b.Navigation("ventas");
                });

            modelBuilder.Entity("BackEnd_SistemaGestionContable.Model.Ventas", b =>
                {
                    b.Navigation("detalleVenta");

                    b.Navigation("movimientosFinancieros");
                });
#pragma warning restore 612, 618
        }
    }
}
